/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package profit.miner.ui;

import javax.swing.SpinnerNumberModel;
import profit.TradeManager;

/**
 *
 * @author USER
 */
public class OrderEntryPanel extends javax.swing.JPanel {

    TradeManager tradeMgr;

    /**
     * Creates new form OrderEntryPanel
     */
    public OrderEntryPanel(TradeManager mgr) {
        tradeMgr = mgr;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cboOrderSymbol = new javax.swing.JComboBox<>();
        cboOrderType = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        spnLots = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        spnOpenPrice = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        spnStoplossPrice = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        spnTargetPrice = new javax.swing.JSpinner();
        cmdSendOrder = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Order Entry", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));

        cboOrderSymbol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<INSTRUMENT>", "EUR/USD", "GBP/USD", "AUD/USD", "NZD/USD", "ZAR/USD", "INR/USD", "USD/JPY", "USD/CHF", "USD/CAD", "USD/HKD", "USD/SGD", "EUR/CHF", "EUR/JPY", "EUR/GBP", "EUR/AUD", "EUR/CAD", "EUR/NZD", "GBP/JPY", "GBP/CHF", "GBP/AUD", "GBP/NZD", "GBP/CAD", "AUD/CAD", "AUD/JPY", "AUD/CHF", "NZD/JPY", "NZD/CHF", "ZAR/EUR", "ZAR/GBP", "USD/TRY", "USD/SEK", "USD/RUB", "USD/DKK", "GBP/ZAR", "GBP/SEK", "GBP/PLN", "GBP/DKK", "EUR/ZAR", "EUR/TRY", "CAD/CHF", "CAD/JPY", "GBP/TRY", "CHF/JPY", "TRY/JPY", "XAU/USD", "XBR/USD", "XAG/USD" }));
        cboOrderSymbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboOrderSymbolActionPerformed(evt);
            }
        });
        add(cboOrderSymbol);

        cboOrderType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<TYPE>", "BUY", "SELL", "BUY LIMIT", "SELL LIMIT", "BUY STOP", "SELL STOP", " " }));
        add(cboOrderType);

        jLabel1.setText("Lots");
        add(jLabel1);

        spnLots.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 0.1d));
        add(spnLots);

        jLabel2.setText("MP");
        add(jLabel2);

        spnOpenPrice.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0E-4d));
        add(spnOpenPrice);

        jLabel4.setText("SL");
        add(jLabel4);

        spnStoplossPrice.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0E-4d));
        add(spnStoplossPrice);

        jLabel3.setText("TP");
        add(jLabel3);

        spnTargetPrice.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0E-4d));
        add(spnTargetPrice);

        cmdSendOrder.setText("Send");
        cmdSendOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSendOrderActionPerformed(evt);
            }
        });
        add(cmdSendOrder);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdSendOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSendOrderActionPerformed
        String symbol = this.cboOrderSymbol.getSelectedItem().toString();
        double lot = Double.parseDouble(spnLots.getValue().toString());
        double op = Double.parseDouble(spnOpenPrice.getValue().toString());
        double tp = Double.parseDouble(spnTargetPrice.getValue().toString());;
        double sl = Double.parseDouble(spnStoplossPrice.getValue().toString());;
        String type = this.cboOrderType.getSelectedItem().toString();
        switch (type) {
            case "BUY": {
                tradeMgr.buy(symbol, lot, tp, sl);
            }
            break;
            case "SELL": {
                tradeMgr.sell(symbol, lot, tp, sl);
            }
            break;
            case "BUY LIMIT": {
                tradeMgr.buyLimit(symbol, lot, op, tp, sl);
            }
            break;
            case "SELL LIMIT": {
                tradeMgr.sellLimit(symbol, lot, op, tp, sl);
            }
            break;
            case "BUY STOP": {
                tradeMgr.buyStop(symbol, lot, op, tp, sl);
            }
            break;
            case "SELL STOP": {
                tradeMgr.sellStop(symbol, lot, op, tp, sl);
            }
            break;
        }


    }//GEN-LAST:event_cmdSendOrderActionPerformed

    private void cboOrderSymbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboOrderSymbolActionPerformed
        String symbol = this.cboOrderSymbol.getSelectedItem().toString();
        int index = symbol.indexOf('/');
        if (index != 3) {
            return;
        }

        String currency1 = symbol.substring(0, 3);
        String currency2 = symbol.substring(index + 1);

        double step = 0;
        if (currency1.equals("JPY") || currency2.equals("JPY")) {
            step = 0.01;
        } else {
            step = 0.0001;
        }

        SpinnerNumberModel ssm1 = (SpinnerNumberModel) spnOpenPrice.getModel();
        SpinnerNumberModel ssm2 = (SpinnerNumberModel) spnTargetPrice.getModel();
        SpinnerNumberModel ssm3 = (SpinnerNumberModel) spnStoplossPrice.getModel();
        ssm1.setStepSize(step);
        ssm2.setStepSize(step);
        ssm3.setStepSize(step);
    }//GEN-LAST:event_cboOrderSymbolActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboOrderSymbol;
    private javax.swing.JComboBox<String> cboOrderType;
    private javax.swing.JButton cmdSendOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSpinner spnLots;
    private javax.swing.JSpinner spnOpenPrice;
    private javax.swing.JSpinner spnStoplossPrice;
    private javax.swing.JSpinner spnTargetPrice;
    // End of variables declaration//GEN-END:variables
}
